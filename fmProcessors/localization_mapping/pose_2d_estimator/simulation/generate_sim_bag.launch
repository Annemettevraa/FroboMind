<!--
This launch file generates a simulation bag which contains output from:
	/fmKnowledge/encoder_odom
	/fmInforation/imu
	/fmInformation/gpgga
-->

<launch>
	<!-- Armadillo Pichi parameters --> 
	<param name="diff_steer_wheel_radius" value="0.159"/>
	<!-- param name="diff_steer_wheel_ticks_per_rev" value="1157"/ -->
	<param name="diff_steer_wheel_ticks_per_rev" value="275"/> <!-- this value works but does not correspond to calculations -->
	<param name="diff_steer_wheel_distance" value="0.84"/>

	<param name="/use_sim_time" value="true"/> 

	<group ns="rosbag">
		<!-- launch a bag from the SDU Pichi robot to emulate sensor input -->
		<node pkg="rosbag" name="sensors" type="play" args="--start=12 --rate=1 --clock $(find pose_2d_estimator)/bags/test01.bag">
			<remap from="/rosbag/clock" to="/clock"/> <!-- should not be necessary but it is...!!! -->
		</node>

		<!-- rosbag the output for simulation -->
		<node pkg="rosbag" name="record" type="record" args="-O $(find pose_2d_estimator)/simulation/sim.bag /fmKnowledge/encoder_odom /fmInformation/gpgga_tranmerc /fmInformation/imu /fmInformation/enc_left /fmInformation/enc_right"/>
	</group>

	<group ns="fmSensors">
		<!-- launch conversion node to convert IntStamped messages to encoder messages -->
		<!-- (this is a temporary fix until we get all encoder messages changed to IntStamped) -->
		<!-- <node pkg="int_stamped_to_encoder" name="enc_conversion" type="encoder_converter.py" /> -->

		<!-- append Transverse Mercator projection coordinates to NMEA $GPGGA message -->
		<node pkg="gpgga_to_tranmerc" name="gpgga_to_tranmerc" type="gpgga_to_tranmerc_node" output="screen">
			<param name="gpgga_sub" value="/fmInformation/gpgga" />
			<param name="gpgga_tranmerc_pub" value="/fmInformation/gpgga_tranmerc" />
			<param name="transverse_mercator_a" value="6378137.0" />
			<param name="transverse_mercator_f" value="0.0033528106647474805" /> <!-- 1/298.257223563 -->
			<param name="transverse_mercator_false_easting" value="500000.0" />
			<param name="transverse_mercator_scale_factor" value="0.9996" />
			<param name="transverse_mercator_origin_latitude" value="0.0" />
			<param name="transverse_mercator_central_meridian" value="9.0" />
			<param name="transverse_mercator_false_northing" value="0.0" />
		</node>
	</group>

	<group ns="fmProcessors">
		<!-- calculate odometry based on encoders and IMU yaw axis orientation -->
		<node pkg="differential_odometry" name="differential_odometry" type="differential_odometry_node" output="screen" >
			<param name="enc_left_sub" value="/fmInformation/enc_left" />
			<param name="enc_right_sub" value="/fmInformation/enc_right" />
			<param name="imu_sub" value="/fmInformation/imu" />
			<param name="odom_pub" value="/fmKnowledge/encoder_odom" />
			<param name="encoder_output" value="absolute"></param>  
		    <!--<param name="yaw_angle_source" value="imu_orientation"></param> -->
			<param name="yaw_angle_source" value="imu_angular_velocity"></param>
			<param name="imu_angular_velocity_yaw_axis" value="y"></param>
			<param name="vehicle_frame" value="base_footprint"></param>      
			<param name="odom_estimate_frame" value="/odom_combined"></param>      
		</node>
	</group>
</launch>
